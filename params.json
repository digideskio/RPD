{"name":"Fmd","tagline":"Stream radio to command line with ease and comfort","body":"# FMD (Internet Radio Service Daemon)\r\n\r\nThis is a fork from the original [FMD](https://github.com/hzqtc/fmd). The aim of this fork is to provide more advanced features.\r\n\r\n## Architectural differences\r\n\r\n### Decoder\r\n\r\nThis version of `fmd` uses `ffmpeg` instead of `mpg123` to decode music. The rational is to support more audio formats e.g. `m4a`.\r\n\r\n### Network transfer\r\n\r\nImproving on the original model, this version uses a multi-threaded downloading framework to pull content from network. At any time when streaming music from an online service, multiple instances of `curl` keep running and caching songs until the queue becomes empty (the default number of song downloaders is 2 but you can change that number in the source file).\r\n\r\nA negativity here is that when the program first starts pulling songs it's relatively slow, since the additional downloaders will take away bandwidth for the first song. However, this will be subsequently complemented by smoother music playing in all following songs. (Or you can simply change the number of assigned song downloaders to 1 to avoid this problem)\r\n\r\n\r\n## Configuration changes\r\n\r\nIf you have `channel` setting in `fmd.conf`, remember to move it outside `[DoubanFM]` and put it under `[Radio]` instead like this\r\n\r\n    [Radio]\r\n    channel = 0\r\n\r\nThe reason for this is that there are more channels now in addition to those from Douban.\r\n\r\nIn addition, the sampling rate setting `rate = <rate>` is omitted from `[Output]` section because `ffmpeg` can automatically detect the sampling rate of the source audio and `libao` can then use that during playback.\r\n\r\n## Requirements\r\n\r\nThis version of `fmd` has the following dependencies:\r\n\r\n* `ffmpeg` for music decoding\r\n* `libao` for music playing\r\n* `libcurl` for api calls and music downloading\r\n* `json-c` for json parsing\r\n* `openssl` for validating cached songs using sha256\r\n* `mutagen` for local music tagging\r\n* my mutagen [frontend](mutagen) for accessing the useful functions from `mutagen`\r\n\r\n## <a id=\"local\"></a>Local music channel / Red-Heart channel\r\n\r\n### Configuration\r\n\r\nTo configure the local music channel simply put this in your `fmd.conf`\r\n\r\n    [Local]\r\n    music_dir = {default value: ~/Music}\r\n\r\nThe local channel comes with id `999` and if you also use my fork of [FMC](https://github.com/lynnard/fmc), it will display the channel name as the name of the current login user. All files of mimetype `audio/*` within the `music_dir` are added randomly to the playlist.\r\n\r\n### Like\r\n\r\nBy default all music is `liked`. If you unrate a song, the action would be the same as `ban`.\r\n\r\n### Ban\r\n\r\nThe song will be removed from your disk. In addition, if it's enclosed in some directory that becomes empty, that directory is removed as well.\r\n\r\nThe local music channel is also the fall-back channel if network becomes unavailable i.e. when `fmd` is unable to retrieve any playlists from online channels.\r\n\r\nAside from these things the local channel is almost identical to any online channel.\r\n\r\n## Jing.fm\r\n\r\n### Configuration\r\n\r\nYou need to first have a [Jing.fm](http://jing.fm) account. Then run this line at the command line, replacing `<email>` and `<password>` accordingly.\r\n\r\n    $ curl -i -d'email=<email>' -d'pwd=<password>' 'http://jing.fm/api/v1/sessions/create'\r\n\r\nCopy down your userid (buried inside the JSON response `result.usr.id`), Jing-A-Token-Header and Jing-R-Token-Header and put them into your `fmd.conf`\r\n\r\n    [JingFM]\r\n    atoken = <Jing-A-Token-Header>\r\n    rtoken = <Jing-R-Token-Header>\r\n    uid = <uid>\r\n\r\n### Channels\r\n\r\nTo start a Jing.fm channel, simply use the old command `setch <string>`. While any integer value will be interpreted as a Douban channel, all other strings will be seen as queries into Jing.fm. For example:\r\n\r\n    fmc setch '周杰伦'\r\n\r\nwill start a new Jing.fm channel on 周杰伦.\r\n\r\nIn addition, some channels are *special* \r\n\r\n* `#top`: this is identical to listening to music from the 音乐瀑布 on the official webpage\r\n* `#rand`: this will start a random channel using a trending search term (which is the same as the 'suggestion' function on the official webpage)\r\n* `#psn`: this starts Jing's personal recommendation channel\r\n\r\n### Like & Ban\r\n\r\nThese actions are identical to those used with Douban channels from the user point of view. But of course now the data is sent to jing.fm instead.\r\n\r\n## Music Caching\r\n\r\nAll played and liked songs will be saved to `music_dir` (as specified in the [Local](#local) section) in `artist/title.<ext>` format. The ID3 tags (for `m4a`, iTunes-style tags) will be saved along as well. The cover image, when downloadable, will be downloaded and embedded into the song.\r\n\r\n## More fine-grained infomation\r\n\r\nThe `info` command will now also give back the `kbps` rate of the current song. This can be different depending on each song.\r\n\r\n## More commands\r\n\r\nA few more commands are added in this fork. They include\r\n\r\n* `kbps <bitrate>`: on-the-fly switching of music quality\r\n* `webpage`: opens the douban music page for the current song using the browser specified in the shell variable `$BROWSER`; if the page url is not available e.g. for Jing.fm channels, it will open the search page on douban music\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}